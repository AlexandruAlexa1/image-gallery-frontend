name: CI/CD Angular to AWS + Test Report to GitHub Pages 🚀

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lint:
    name: 🔍 Lint Angular code
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Run ESLint
        run: npm run lint

  test:
    name: 🧪 Test Angular app
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run unit tests with coverage
        run: npm run test:ci

      - name: 📄 Prepare test report
        run: |
          mkdir -p test-report
          cp -r coverage/*/* test-report/
          cp test-report/index.html test-report/404.html || true
          
      - name: 📤 Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: test-report
          
      - name: ⚙️ Configure GitHub Pages
        uses: actions/configure-pages@v3

      - name: 🚀 Deploy test report to GitHub Pages
        uses: actions/deploy-pages@v4

  build-deploy:
    name: ☁️ Build & Deploy to AWS
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: ⚙️ Build Angular app
        run: npm run build -- --configuration production

      - name: ☁️ Deploy to AWS S3
        run: aws s3 sync dist/image-gallery-frontend/browser/ s3://${{ secrets.AWS_S3_BUCKET }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: 🔄 Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
